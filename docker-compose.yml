version: '3.8'  # Specifies the version of Docker Compose file format

services:  # Defines the services that make up your app
  web:  # The Django web application service
    build:  # Specifies the build configuration for this service
      context: .  # Sets the build context to the current directory
      dockerfile: Dockerfile  # Specifies the Dockerfile to use
    command: ["sh", "/code/entrypoint.sh"]  # Command to run when the container starts
    volumes:  # Mounts host paths or named volumes
      - .:/code:ro  # Mounts the current directory to /code in the container (read-only)
    ports:  # Exposes ports
      - "8001:8000"  # Maps port 8000 in the container to port 8001 on the host
    depends_on:  # Expresses dependency between services
      - db  # This service depends on the db service
    environment:  # Sets environment variables
      - DATABASE_NAME=${DATABASE_NAME}  # Sets DATABASE_NAME from .env file
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASS=${DATABASE_PASS}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    networks:  # Specifies which networks to join
      - backend
    healthcheck:  # Configures a test to check container health
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 1m30s  # Run the check every 1.5 minutes
      timeout: 10s  # The check has 10 seconds to complete
      retries: 3  # Retry 3 times before considering unhealthy
      start_period: 40s  # Wait 40s before starting checks
    logging:  # Configures logging for the container
      driver: "json-file"
      options:
        max-size: "200k"  # Each log file can grow to max 200KB
        max-file: "10"  # Keep max 10 log files
    cap_drop:  # Drops all capabilities
      - ALL
    cap_add:  # Adds specific capabilities
      - NET_BIND_SERVICE  # Allows binding to privileged ports

  db:  # The PostgreSQL database service
    image: postgres:16  # Uses the official PostgreSQL 16 image
    volumes:
      - postgres_data:/var/lib/postgresql/data/  # Persists the database data
    ports:
      - "5433:5432"  # Maps PostgreSQL port to host
    environment:  # Sets environment variables for PostgreSQL
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}
    networks:
      - backend  # Joins only the backend network
    healthcheck:  # Configures a health check for the database
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:  # Defines the networks used by the services
  backend:  # Network for backend communication

volumes:  # Defines named volumes used by the services
  postgres_data:  # Volume for persisting PostgreSQL data
