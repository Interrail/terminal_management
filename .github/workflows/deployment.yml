on:
  push:
    branches:
      - master
jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_NAME: postgres
      DATABASE_USER: postgres
      DATABASE_PASS: ${{secrets.DATABASE_PASS}}
      DATABASE_HOST: localhost123
      DATABASE_PORT: 5432
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASS}}
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.12
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: sync database
        run: |
          python manage.py makemigrations
          python manage.py migrate
      - name: run tests
        run: |
            pip install pytest
            pytest --junitxml=junit/test-results.xml


  build-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Set Tag in evn variable
      run: |
        echo "${GITHUB_SHA:0:7}" > TAG
        echo "docker.interrail.uz:7007/${{ github.event.repository.name }}" > IMAGE_NAME
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag  $(cat IMAGE_NAME):$(cat TAG)
    - name: Docker Login
      run: docker login docker.interrail.uz:7007 -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Image push
      run: docker push  $(cat IMAGE_NAME):$(cat TAG)
